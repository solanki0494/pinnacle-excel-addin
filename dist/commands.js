(()=>{"use strict";var e={684:(e,o)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.copyOperatingExpenses=async function(e){try{console.log("Starting template copy from Outputs to Software Engineer Cash Flow...");const o=e.workbook.worksheets;if(o.load("items/name"),await e.sync(),console.log("Available sheets:",o.items.map(e=>e.name)),!o.items.some(e=>"Outputs"===e.name))throw new Error("The 'Outputs' sheet was not found. Please make sure the sheet exists and is named exactly 'Outputs'.");const t=e.workbook.worksheets.getItem("Outputs"),n=o.items.some(e=>"Software Engineer Cash Flow"===e.name);let s=!1;n?(console.log("Software Engineer Cash Flow sheet exists, will be replaced with fresh copy"),s=!0):(console.log("Software Engineer Cash Flow sheet does not exist, will create fresh copy"),s=!1),console.log("Using sheet copy approach for perfect formatting preservation"),s&&(console.log("Deleting existing Software Engineer Cash Flow sheet"),e.workbook.worksheets.getItem("Software Engineer Cash Flow").delete(),await e.sync()),console.log("Copying Outputs sheet...");const r=t.copy(Excel.WorksheetPositionType.after,t);r.name="Software Engineer Cash Flow",await e.sync(),console.log("Sheet copied successfully, now converting formulas to values...");const a=r.getUsedRange();a?(a.load(["values","rowCount","columnCount"]),await e.sync(),console.log(`Converting formulas to values for range: ${a.rowCount} rows x ${a.columnCount} columns`),a.copyFrom(a,Excel.RangeCopyType.values,!1,!1),await e.sync(),console.log("Successfully converted all formulas to values")):console.warn("No used range found in copied sheet");const l=e.workbook.worksheets;if(l.load("items/name"),await e.sync(),!l.items.some(e=>"Software Engineer Cash Flow"===e.name))throw new Error("Software Engineer Cash Flow sheet was not found after copying - this should not happen");console.log("✅ Successfully copied Outputs sheet to Software Engineer Cash Flow with perfect formatting"),console.log("✅ All formulas converted to calculated values"),console.log("✅ Colors, borders, fonts, and layout preserved exactly")}catch(e){throw console.error("Error copying template:",e),e instanceof Error?e.message.includes("doesn't exist")?new Error("Sheet not found. Please ensure both 'Outputs' sheet exists in your workbook."):e.message.includes("empty")?e:new Error(`Template copy failed: ${e.message}`):new Error("An unexpected error occurred while copying the template.")}},o.showNotification=async function(e,o){try{console.log(`${e}: ${o}`)}catch(t){console.log(`${e}: ${o}`)}}}},o={};function t(n){var s=o[n];if(void 0!==s)return s.exports;var r=o[n]={exports:{}};return e[n](r,r.exports,t),r.exports}t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{const e=t(684);t.g.runCalculation=async function(o){try{await Excel.run(async t=>{console.log("Starting calculation from ribbon button..."),t.application.calculationMode=Excel.CalculationMode.automatic,t.application.calculate(Excel.CalculationType.full),await t.sync(),await new Promise(e=>setTimeout(e,500)),await(0,e.copyOperatingExpenses)(t),await(0,e.showNotification)("Calculation Complete","Operating expenses copied successfully!"),o.completed()})}catch(t){console.error("Error in runCalculation:",t);const n=t instanceof Error?t.message:String(t);await(0,e.showNotification)("Calculation Error",`Error: ${n}`),o.completed()}}})()})();