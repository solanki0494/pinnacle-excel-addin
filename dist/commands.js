(()=>{"use strict";var o={684:(o,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.copyOperatingExpenses=async function(o){try{console.log("Starting template copy from Outputs to Software Engineer Cash Flow...");const e=o.workbook.worksheets;if(e.load("items/name"),await o.sync(),console.log("Available sheets:",e.items.map(o=>o.name)),!e.items.some(o=>"Outputs"===o.name))throw new Error("The 'Outputs' sheet was not found. Please make sure the sheet exists and is named exactly 'Outputs'.");const t=o.workbook.worksheets.getItem("Outputs");let n,r=!1;if(e.items.some(o=>"Software Engineer Cash Flow"===o.name))console.log("Software Engineer Cash Flow sheet exists, will clear and override"),n=o.workbook.worksheets.getItem("Software Engineer Cash Flow"),r=!0;else{console.log("Software Engineer Cash Flow sheet does not exist, creating new sheet");try{n=o.workbook.worksheets.add("Software Engineer Cash Flow"),r=!1,console.log("Successfully created Software Engineer Cash Flow sheet")}catch(o){throw console.error("Error creating sheet:",o),new Error(`Failed to create 'Software Engineer Cash Flow' sheet: ${o instanceof Error?o.message:String(o)}`)}}await o.sync();try{n.load("name"),await o.sync(),console.log(`Target sheet confirmed: ${n.name}`)}catch(o){throw console.error("Error verifying target sheet:",o),new Error("Failed to access the target sheet after creation/selection")}if(r)try{const e=n.getUsedRange();e&&(e.clear(),await o.sync(),console.log("Cleared existing content from Software Engineer Cash Flow sheet"))}catch(o){console.warn("Could not clear existing content (sheet might be empty):",o)}const a=t.getUsedRange();if(!a)throw new Error("The 'Outputs' sheet appears to be empty. Please add some content to copy.");a.load(["values","formulas","format","rowCount","columnCount"]),await o.sync(),console.log(`Template range size: ${a.rowCount} rows x ${a.columnCount} columns`);const s=n.getRangeByIndexes(0,0,a.rowCount,a.columnCount);try{await async function(o,e,t){try{o.format.load(["columnWidth","rowHeight","horizontalAlignment","verticalAlignment","wrapText","textOrientation","shrinkToFit","readingOrder","borders","fill","font","protection"]),await t.sync(),e.format.horizontalAlignment=o.format.horizontalAlignment,e.format.verticalAlignment=o.format.verticalAlignment,e.format.wrapText=o.format.wrapText,e.format.textOrientation=o.format.textOrientation,e.format.shrinkToFit=o.format.shrinkToFit,e.format.readingOrder=o.format.readingOrder,o.format.font.load(["name","size","bold","italic","underline","color"]),await t.sync(),e.format.font.name=o.format.font.name,e.format.font.size=o.format.font.size,e.format.font.bold=o.format.font.bold,e.format.font.italic=o.format.font.italic,e.format.font.underline=o.format.font.underline,e.format.font.color=o.format.font.color,o.format.fill.load(["color","pattern"]),await t.sync(),e.format.fill.color=o.format.fill.color,e.format.fill.pattern=o.format.fill.pattern,await t.sync(),console.log("Formatting copied successfully")}catch(o){console.warn("Could not copy all formatting, continuing with values:",o)}}(a,s,o),s.values=a.values,await async function(o,e,t,n){try{for(let r=0;r<t.columnCount;r++){const t=o.getRange(`${String.fromCharCode(65+r)}:${String.fromCharCode(65+r)}`),a=e.getRange(`${String.fromCharCode(65+r)}:${String.fromCharCode(65+r)}`);t.format.load("columnWidth"),await n.sync(),a.format.columnWidth=t.format.columnWidth}for(let r=0;r<t.rowCount;r++){const t=o.getRange(`${r+1}:${r+1}`),a=e.getRange(`${r+1}:${r+1}`);t.format.load("rowHeight"),await n.sync(),a.format.rowHeight=t.format.rowHeight}await n.sync(),console.log("Column widths and row heights copied successfully")}catch(o){console.warn("Could not copy all dimensions, continuing:",o)}}(t,n,a,o),await o.sync()}catch(o){throw console.error("Error during range operations:",o),new Error(`Failed to copy data: ${o instanceof Error?o.message:String(o)}`)}const i=o.workbook.worksheets;if(i.load("items/name"),await o.sync(),!i.items.some(o=>"Software Engineer Cash Flow"===o.name))throw new Error("Software Engineer Cash Flow sheet was not found after creation - this should not happen");console.log("Successfully copied template structure, formatting, and calculated values to Software Engineer Cash Flow sheet"),console.log("Final verification: Software Engineer Cash Flow sheet exists and contains data")}catch(o){throw console.error("Error copying template:",o),o instanceof Error?o.message.includes("doesn't exist")?new Error("Sheet not found. Please ensure both 'Outputs' sheet exists in your workbook."):o.message.includes("empty")?o:new Error(`Template copy failed: ${o.message}`):new Error("An unexpected error occurred while copying the template.")}},e.showNotification=async function(o,e){try{console.log(`${o}: ${e}`)}catch(t){console.log(`${o}: ${e}`)}}}},e={};function t(n){var r=e[n];if(void 0!==r)return r.exports;var a=e[n]={exports:{}};return o[n](a,a.exports,t),a.exports}t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(o){if("object"==typeof window)return window}}(),(()=>{const o=t(684);t.g.runCalculation=async function(e){try{await Excel.run(async t=>{console.log("Starting calculation from ribbon button..."),t.application.calculationMode=Excel.CalculationMode.automatic,t.application.calculate(Excel.CalculationType.full),await t.sync(),await new Promise(o=>setTimeout(o,500)),await(0,o.copyOperatingExpenses)(t),await(0,o.showNotification)("Calculation Complete","Operating expenses copied successfully!"),e.completed()})}catch(t){console.error("Error in runCalculation:",t);const n=t instanceof Error?t.message:String(t);await(0,o.showNotification)("Calculation Error",`Error: ${n}`),e.completed()}}})()})();